{"version":3,"sources":["redux/actions/searching.js","components/SearchInput.js","components/SearchBar.js","components/Navbar.js","pages/App.js","reportWebVitals.js","redux/reducers/search.js","redux/reducers/index.js","redux/store/store.js","index.js"],"names":["searchValue","value","type","SearchInput","props","searching","useSelector","state","dispatch","useDispatch","useEffect","autoFocus","className","inputClass","onChange","e","target","test","SearchBar","useState","searchBarActive","setSearchBarActive","setInputClass","history","useHistory","push","pathname","search","onClick","setTimeout","prev","Navbar","exact","to","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","searchReducer","action","allReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAAaA,EAAc,WAAiB,IAAhBC,EAAe,uDAAP,GAClC,MAAO,CACLC,KAAM,SACND,U,OCmBWE,EAhBK,SAAAC,GAElB,IAAMC,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,aACvCG,EAAWC,cACjBC,qBAAU,WACR,OAAO,WACLF,EAASR,EAAY,QAEtB,IAIH,OACE,uBAAOW,WAAS,EAACC,UAAWR,EAAMS,WAAYZ,MAAOI,EAAWS,SAJ7C,SAACC,GACpBP,EAASR,EAAYe,EAAEC,OAAOf,YCV9BgB,GAAO,EAuCIC,EAtCG,WAChB,MAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAoCF,mBAAS,kBAA7C,mBAAON,EAAP,KAAmBS,EAAnB,KACMjB,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,aACzCkB,EAAUC,cAEdd,qBAAU,WACLO,EACiB,KAAdZ,EACFkB,EAAQE,KAAK,CACXC,SAAU,UACVC,OAAO,IAAD,OAAMtB,KAETkB,EAAQE,KAAK,IAEfR,GAAO,IAEb,CAACZ,IAcJ,OACE,uBAAMO,UAAU,YAAhB,UACE,sBAAMgB,QAfU,WACdR,GACFE,EAAc,YACdO,YAAW,WAETR,GAAmB,SAAAS,GAAI,OAAKA,OAC3B,OAEHR,EAAc,kBACdD,GAAmB,SAAAS,GAAI,OAAKA,OAM5B,SAA4B,cAAC,IAAD,MAC3BV,GAAmB,cAAC,EAAD,CAAaP,WAAYA,QChBpCkB,EAnBA,WAEb,OACA,qBAAKnB,UAAU,SAAf,SACA,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,WAAf,UACE,cAAC,IAAD,CAASoB,OAAK,EAACC,GAAG,IAAlB,kBACA,cAAC,IAAD,CAASD,OAAK,EAACC,GAAG,WAAlB,qBACA,cAAC,IAAD,CAASD,OAAK,EAACC,GAAG,QAAlB,kBACA,cAAC,IAAD,CAASD,OAAK,EAACC,GAAG,QAAlB,uBAEF,sBAAKrB,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CAASoB,OAAK,EAACC,GAAG,WAAlB,8BCESC,G,MAbH,SAAA9B,GACV,OACE,cAAC,IAAD,UACE,sBAAKQ,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOoB,OAAK,EAACG,KAAK,IAAlB,SACE,gDCFKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCECQ,EATO,WAAyB,IAAxBtC,EAAuB,uDAAf,GAAIuC,EAAW,uCAC5C,OAAOA,EAAO5C,MACZ,IAAK,SACH,OAAO4C,EAAO7C,MAChB,QACG,OAAOM,ICCCwC,EAHKC,YAAgB,CAClC3C,UAAWsB,ICDEsB,EADDC,YAAYH,EAAaI,OAAOC,8BAAgCD,OAAOC,gCCOrFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SAAwB,cAAC,EAAD,QAG1BO,SAASC,eAAe,SAG1BrB,M","file":"static/js/main.1137a609.chunk.js","sourcesContent":["export const searchValue = (value = '') => {\r\n  return {\r\n    type: 'CHANGE',\r\n    value,\r\n  }\r\n}","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {searchValue} from '../redux/actions/searching'\r\n\r\n\r\n\r\nconst SearchInput = props => {\r\n\r\n  const searching = useSelector(state => state.searching);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(searchValue(''));\r\n    }\r\n  }, [])\r\n  const handleChange = (e) =>{\r\n    dispatch(searchValue(e.target.value));\r\n  }\r\n  return(\r\n    <input autoFocus className={props.inputClass} value={searching} onChange={handleChange}/>\r\n  ) \r\n}\r\nexport default SearchInput;","import React, {useState,useEffect} from 'react'\r\nimport {FaSearch} from 'react-icons/fa'\r\n\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport SearchInput from './SearchInput'\r\nlet test = false\r\nconst SearchBar = () => {\r\n  const [searchBarActive, setSearchBarActive] = useState(false);\r\n  const [inputClass, setInputClass] = useState('searchBarInput');\r\n  const searching = useSelector(state => state.searching);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(test) {\r\n      if (searching !== ''){\r\n        history.push({\r\n          pathname: '/search',\r\n          search: `?${searching}`\r\n        });\r\n      } else history.push('')\r\n      \r\n    } else test = true\r\n    \r\n  }, [searching])\r\n  const handleClick = () =>{\r\n    if (searchBarActive){\r\n      setInputClass('inputOff')\r\n      setTimeout(() => {\r\n        \r\n        setSearchBarActive(prev => !prev)\r\n      }, 400);\r\n    } else{\r\n      setInputClass('searchBarInput')\r\n      setSearchBarActive(prev => !prev)\r\n    }\r\n    \r\n  }\r\n  return(\r\n    <span className=\"searchBar\" >\r\n      <span onClick={handleClick}><FaSearch/></span>\r\n      {searchBarActive && <SearchInput inputClass={inputClass}/>}\r\n    </span>\r\n  )\r\n}\r\nexport default SearchBar;","import { NavLink } from \"react-router-dom\"\r\nimport '../style/Navbar.scss'\r\nimport SearchBar from \"./SearchBar\"\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n  \r\n  return(\r\n  <div className=\"Navbar\">\r\n  <div className=\"nav-container\">\r\n    <div className='nav-left'>\r\n      <NavLink exact to=\"/\">Home</NavLink>\r\n      <NavLink exact to=\"/profile\">Profile</NavLink>\r\n      <NavLink exact to=\"/news\">News</NavLink>\r\n      <NavLink exact to=\"/test\">Donate</NavLink>\r\n    </div>\r\n    <div className='nav-right'>\r\n      <SearchBar/>\r\n      <NavLink exact to=\"/profile\">Profile</NavLink>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  )\r\n}\r\nexport default Navbar","import {\n  BrowserRouter as Router, \n  // Switch,\n  Route,\n} from 'react-router-dom'\nimport Navbar from '../components/Navbar';\nimport '../style/App.scss';\n\nconst App = props => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar/>\n        <Route exact path=\"/\">\n          <div>test</div>\n        </Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const searchReducer = (state = '', action) => {\r\n  switch(action.type){\r\n    case 'CHANGE':\r\n      return action.value;\r\n    default:\r\n       return state;\r\n\r\n  }\r\n}\r\nexport default searchReducer;","import search from './search';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n  searching: search,\r\n});\r\nexport default allReducers;","import {createStore} from 'redux'\r\nimport allReducers from '../reducers';\r\nconst store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport App from './pages/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './redux/store/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}